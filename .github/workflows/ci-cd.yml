name: CI/CD Pipeline

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Run tests
      run: mvn clean test

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: dev
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build application
      run: mvn clean package
    - name: Deploy to Dev
      run: |
        echo "Deploying to DEV environment"
        echo "DB_URL=jdbc:postgresql://${{ secrets.DEV_DB_HOST }}:5432/webapp" > .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

  deploy-test:
    needs: deploy-dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: test
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build application
      run: mvn clean package
    - name: Deploy to Test
      run: |
        echo "Deploying to TEST environment"
        echo "DB_URL=jdbc:postgresql://${{ secrets.TEST_DB_HOST }}:5432/webapp" > .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment: staging
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build application
      run: mvn clean package
    - name: Deploy to Bastion Host
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.BASTION_HOST }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo yum update -y
          sudo yum install -y java-11-openjdk
          mkdir -p /home/ec2-user/app
          export DB_URL=jdbc:postgresql://${{ secrets.STG_DB_HOST }}:5432/webapp
          export DB_USERNAME=${{ secrets.DB_USERNAME }}
          export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          echo "Application deployed to staging"
    - name: Upload JAR
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.BASTION_HOST }}
        username: ec2-user
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "target/*.jar"
        target: "/home/ec2-user/app/"